{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBound.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","cardsArray","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBound","_this","Object","classCallCheck","this","_super","call","state","hasError","e","setState","Component","App","onSearchChange","target","value","_this2","fetch","then","response","json","users","_this$state","searchfieldValue","toLowerCase","filteredRobots","filter","includes","length","components_SearchBox","components_Scroll","components_ErrorBound","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.70217ae3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardsArray = robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n            key={i}\r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email} \r\n        />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <i className='fa fa-search w3-large mr2 icowh'></i>\r\n            <input\r\n                className='pa2 ph3 mb3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Search Robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className='scroll shadow-5'>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componenetDidCatch(e, i) {\r\n        this.setState({\r\n            hasError: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Something went wrong.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBound;","import React, { Component } from 'react';\r\nimport CardList from './components/CardList';\r\nimport SearchBox from './components/SearchBox';\r\nimport Scroll from './components/Scroll';\r\nimport ErrorBound from './components/ErrorBound';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users,}));\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        this.setState({\r\n            searchfield: e.target.value,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const searchfieldValue = searchfield.toLowerCase();\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfieldValue) || robots.email.toLowerCase().includes(searchfieldValue);\r\n        })\r\n        if (!robots.length) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1 mb2'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBound>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBound>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}